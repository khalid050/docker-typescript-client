import { QueryParams, DaemonResponse } from "../response";
export declare const Image: Image;
declare type List = (props?: QueryParams<"ImageList">) => DaemonResponse<"ImageList">;
declare type Build = (tarArchivePath: string, options: QueryParams<"ImageBuild">) => DaemonResponse<"ImageBuild">;
declare type Inspect = (imageIdOrName: string) => DaemonResponse<"ImageInspect">;
declare type Remove = (imageIdOrName: string, options?: QueryParams<"ImageDelete">) => DaemonResponse<"ImageDelete">;
declare type Tag = (imageIdOrName: string, options: QueryParams<"ImageTag">) => DaemonResponse<"ImageTag">;
declare type History = (imageIdOrName: string) => DaemonResponse<"ImageHistory">;
declare type DeleteBuilderCache = (options?: QueryParams<"BuildPrune">) => void;
declare type Search = (term: string, options?: Omit<QueryParams<"ImageSearch">, "term">) => DaemonResponse<"ImageSearch">;
declare type DeleteUnusedImages = (options?: QueryParams<"ImagePrune">) => DaemonResponse<"ImagePrune">;
declare type Image = {
    list: List;
    build: Build;
    inspect: Inspect;
    remove: Remove;
    tag: Tag;
    history: History;
    deleteBuilderCache: DeleteBuilderCache;
    search: Search;
    deleteUnusedImages: DeleteUnusedImages;
};
export {};
